:host {
  --bg-star-color: #e91e63;
}

:host-context(body.dark-theme) {
  --bg-star-color: #ffff00;

  main {
    background: radial-gradient(ellipse at bottom, #0d1d31 0%, #141314 100%);
  }
}

@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}

main {
  background: radial-gradient(ellipse at bottom, #ffd9e1 0%, #f9f9f9 100%);
  overflow: hidden;
}

mat-card {
  opacity: 0.8;
}

.auth-container {
  position: relative;
  max-width: 500px;
  transition: 0.5s;
}

.toggle-container {
  position: absolute;
  top: 20px;
  right: 20px;
  z-index: 1;
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.bg-stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
}

.bg-star {
  $star-count: 50;
  --star-color: var(--bg-star-color);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  opacity: 0;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite,
    tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: calc(#{random_range(500em, 750em)} / 100);
      --top-offset: calc(#{random_range(0vh, 10000vh)} / 100);
      --fall-duration: calc(#{random_range(6000, 12000s)} / 1000);
      --fall-delay: calc(#{random_range(0, 10000s)} / 1000);
    }
  }

  &::before,
  &::after {
    position: absolute;
    content: "";
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%,
  50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%,
  80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}
